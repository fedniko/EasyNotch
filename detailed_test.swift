#!/usr/bin/env swift

import Foundation
import MediaPlayer
import AppKit

print("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ MPNowPlayingInfoCenter")
print("================================================")

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å MediaPlayer framework
print("üì± –ü—Ä–æ–≤–µ—Ä–∫–∞ MediaPlayer framework...")
if let bundle = Bundle(identifier: "com.apple.MediaPlayer") {
    print("‚úÖ MediaPlayer framework –¥–æ—Å—Ç—É–ø–µ–Ω")
} else {
    print("‚ùå MediaPlayer framework –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º MPNowPlayingInfoCenter
print("\nüéµ –ü—Ä–æ–≤–µ—Ä–∫–∞ MPNowPlayingInfoCenter...")
let infoCenter = MPNowPlayingInfoCenter.default()
print("‚úÖ MPNowPlayingInfoCenter —Å–æ–∑–¥–∞–Ω")

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
if let info = infoCenter.nowPlayingInfo {
    print("‚úÖ MPNowPlayingInfo –Ω–∞–π–¥–µ–Ω!")
    print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π: \(info.count)")
    
    for (key, value) in info {
        print("  \(key): \(value)")
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–ª—é—á–∏
    let title = info[MPMediaItemPropertyTitle] as? String
    let artist = info[MPMediaItemPropertyArtist] as? String
    let album = info[MPMediaItemPropertyAlbumTitle] as? String
    let playbackRate = info[MPNowPlayingInfoPropertyPlaybackRate] as? Double
    
    print("\n--- –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è ---")
    print("–ù–∞–∑–≤–∞–Ω–∏–µ: \(title ?? "nil")")
    print("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: \(artist ?? "nil")")
    print("–ê–ª—å–±–æ–º: \(album ?? "nil")")
    print("–°–∫–æ—Ä–æ—Å—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: \(playbackRate ?? 0.0)")
    
} else {
    print("‚ùå MPNowPlayingInfo –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å
    print("\nüîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è...")
    
    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    let testInfo: [String: Any] = [
        MPMediaItemPropertyTitle: "–¢–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–µ–∫",
        MPMediaItemPropertyArtist: "–¢–µ—Å—Ç–æ–≤—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å",
        MPNowPlayingInfoPropertyPlaybackRate: 1.0
    ]
    
    infoCenter.nowPlayingInfo = testInfo
    print("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞
    if let updatedInfo = infoCenter.nowPlayingInfo {
        print("‚úÖ MPNowPlayingInfo –æ–±–Ω–æ–≤–ª–µ–Ω!")
        print("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª—é—á–µ–π: \(updatedInfo.count)")
        
        for (key, value) in updatedInfo {
            print("  \(key): \(value)")
        }
    } else {
        print("‚ùå MPNowPlayingInfo –≤—Å–µ –µ—â–µ –Ω–µ –Ω–∞–π–¥–µ–Ω")
    }
    
    // –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    infoCenter.nowPlayingInfo = nil
    print("üßπ –¢–µ—Å—Ç–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—á–∏—â–µ–Ω–∞")
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
print("\nüñ•Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...")
let task = Process()
task.launchPath = "/bin/ps"
task.arguments = ["aux"]

let pipe = Pipe()
task.standardOutput = pipe

do {
    try task.run()
    task.waitUntilExit()
    
    let data = pipe.fileHandleForReading.readDataToEndOfFile()
    if let output = String(data: data, encoding: .utf8) {
        let lines = output.components(separatedBy: .newlines)
        
        print("üìä –ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:")
        for line in lines {
            if line.contains("Music") || line.contains("Spotify") || line.contains("VLC") || line.contains("Yandex") {
                print("  \(line)")
            }
        }
    }
} catch {
    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: \(error)")
}

print("\n================================================")
print("üèÅ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")

